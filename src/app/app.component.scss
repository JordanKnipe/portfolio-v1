
.container {

    display: flex;
  }
  
  app-sidebar {
    transition: width 0.3s ease;
  }

  body, html {
    height: 100%;
    margin: 0;
}

.container {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  background-size: cover;
}

.light-effect {
  content: '';
  position: absolute;
  width: 35vw;
  height: 35vw;
  background: radial-gradient(circle, hsla(219, 58%, 59%, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
  pointer-events: none;
  transition: transform 0s ease;
}




  
  .content {
    flex: 1;
    //padding-left: 250px; /* Adjust to match the expanded width of the sidebar */
    transition: padding-left 0.3s ease;
    background-color: var(--color-main-theme); /* Background color for the content area */
  }
  
  
  .content-collapsed {
    margin-left: 50px; /* Adjust to match the collapsed width of the sidebar */
    transition: margin-left 0.3s ease;

  }
  
  .content-expanded {
    margin-left: 250px; /* Adjust to match the expanded width of the sidebar */
    transition: margin-left 0.3s ease;
  }

  @media only screen and (min-width: 1176px) {
    .container {
      margin-left: unset;
      margin-right: unset;
    
     }
  }
  @media only screen and (max-width: 1175px) {
    .content {
      &-collapsed, &-expanded {
        .container {
          // Set the default height that applies to both collapsed and expanded initially
          height: var(--height-minus-header);
        }
      }
    
      &-expanded {
        .container {
          // Override the height for the expanded state
          height: var(--height-minus-header-expanded);
        }
      }
    }
  }
  
  